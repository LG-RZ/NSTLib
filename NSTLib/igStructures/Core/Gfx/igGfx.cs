using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NSTLib.igStructures.Core.Gfx
{
	public enum IG_GFX_DEPTH_TEST_FUNCTION
	{
		IG_GFX_DEPTH_TEST_FUNCTION_NEVER,
		IG_GFX_DEPTH_TEST_FUNCTION_LESS,
		IG_GFX_DEPTH_TEST_FUNCTION_EQUAL,
		IG_GFX_DEPTH_TEST_FUNCTION_LEQUAL,
		IG_GFX_DEPTH_TEST_FUNCTION_GREATER,
		IG_GFX_DEPTH_TEST_FUNCTION_NOT_EQUAL,
		IG_GFX_DEPTH_TEST_FUNCTION_GEQUAL,
		IG_GFX_DEPTH_TEST_FUNCTION_ALWAYS
	};

	public enum IG_GFX_ALPHA_FUNCTION : int
	{
		IG_GFX_ALPHA_FUNCTION_NEVER,
		IG_GFX_ALPHA_FUNCTION_LESS,
		IG_GFX_ALPHA_FUNCTION_EQUAL,
		IG_GFX_ALPHA_FUNCTION_LEQUAL,
		IG_GFX_ALPHA_FUNCTION_GREATER,
		IG_GFX_ALPHA_FUNCTION_NOTEQUAL,
		IG_GFX_ALPHA_FUNCTION_GEQUAL,
		IG_GFX_ALPHA_FUNCTION_ALWAYS
	}

	public enum IG_GFX_BLENDING_FUNCTION
	{
		IG_GFX_BLENDING_FUNCTION_ZERO,
		IG_GFX_BLENDING_FUNCTION_ONE,
		IG_GFX_BLENDING_FUNCTION_SOURCE_COLOR,
		IG_GFX_BLENDING_FUNCTION_ONE_MINUS_SOURCE_COLOR,
		IG_GFX_BLENDING_FUNCTION_SOURCE_ALPHA,
		IG_GFX_BLENDING_FUNCTION_ONE_MINUS_SOURCE_ALPHA,
		IG_GFX_BLENDING_FUNCTION_DESTINATION_COLOR,
		IG_GFX_BLENDING_FUNCTION_ONE_MINUS_DESTINATION_COLOR,
		IG_GFX_BLENDING_FUNCTION_DESTINATION_ALPHA,
		IG_GFX_BLENDING_FUNCTION_ONE_MINUS_DESTINATION_ALPHA,
		IG_GFX_BLENDING_FUNCTION_SOURCE_ALPHA_SATURATE
	}

	public enum IG_GFX_BLENDING_EQUATION
	{
		IG_GFX_BLENDING_EQUATION_ADD = 0,
		IG_GFX_BLENDING_EQUATION_SUBTRACT = 1,
		IG_GFX_BLENDING_EQUATION_REVERSE_SUBTRACT = 2,
		IG_GFX_BLENDING_EQUATION_MIN = 3,
		IG_GFX_BLENDING_EQUATION_MAX = 4
	}

	public enum IG_GFX_CULL_FACE_MODE
	{
		IG_GFX_CULL_FACE_MODE_BACK,
		IG_GFX_CULL_FACE_MODE_FRONT
	}

	public enum IG_GFX_TEXTURE_FILTER
	{
		IG_GFX_TEXTURE_FILTER_NEAREST						= 0,
		IG_GFX_TEXTURE_FILTER_NEAREST_MIPMAP_NONE			= 0,
		IG_GFX_TEXTURE_FILTER_LINEAR						= 1,
		IG_GFX_TEXTURE_FILTER_LINEAR_MIPMAP_NONE			= 1,
		IG_GFX_TEXTURE_FILTER_NEAREST_MIPMAP_NEAREST		= 2,
		IG_GFX_TEXTURE_FILTER_NEAREST_MIPMAP_LINEAR			= 3,
		IG_GFX_TEXTURE_FILTER_LINEAR_MIPMAP_NEAREST			= 4,
		IG_GFX_TEXTURE_FILTER_LINEAR_MIPMAP_LINEAR			= 5,
		IG_GFX_TEXTURE_FILTER_ANISOTROPIC					= 6,
		IG_GFX_TEXTURE_FILTER_ANISOTROPIC_MIPMAP_NONE		= 6,
		IG_GFX_TEXTURE_FILTER_ANISOTROPIC_MIPMAP_NEAREST	= 7,
		IG_GFX_TEXTURE_FILTER_ANISOTROPIC_MIPMAP_LINEAR		= 8,
	}

	public enum IG_GFX_TEXTURE_WRAP
	{
		IG_GFX_TEXTURE_WRAP_CLAMP,
		IG_GFX_TEXTURE_WRAP_REPEAT,
		IG_GFX_TEXTURE_WRAP_REGION_CLAMP,
		IG_GFX_TEXTURE_WRAP_REGION_REPEAT,
		IG_GFX_TEXTURE_WRAP_BORDER,
	}

	public enum IG_GFX_TEXTURE_SOURCE
	{
		IG_GFX_TEXTURE_SOURCE_IMAGE,
		IG_GFX_TEXTURE_SOURCE_VIDEO,
		IG_GFX_TEXTURE_SOURCE_BUFFER,
	}

	public enum IG_GFX_MULTISAMPLE_TYPE
	{
		IG_GFX_MULTISAMPLE_NONE,
		IG_GFX_MULTISAMPLE_2X,
		IG_GFX_MULTISAMPLE_4X,
		IG_GFX_MULTISAMPLE_4X_ROTATED
	}

	public enum IG_GFX_DRAW
	{
		IG_GFX_DRAW_POINTS = 0,
		IG_GFX_DRAW_LINES = 1,
		IG_GFX_DRAW_LINE_STRIP = 2,
		IG_GFX_DRAW_TRIANGLES = 3,
		IG_GFX_DRAW_TRIANGLE_STRIP = 4,
		IG_GFX_DRAW_TRIANGLE_FAN = 5,
		IG_GFX_DRAW_QUADS = 6,
	}

	public enum IG_INDEX_TYPE
    {
		IG_INDEX_TYPE_INT8	= 1,
		IG_INDEX_TYPE_INT16 = 2,
		IG_INDEX_TYPE_INT32 = 4,
	}

	public enum IG_VERTEX_USAGE : byte
    {
		IG_VERTEX_USAGE_POSITION,
		IG_VERTEX_USAGE_NORMAL,
		IG_VERTEX_USAGE_TANGENT,
		IG_VERTEX_USAGE_BINORMAL,
		IG_VERTEX_USAGE_COLOR,
		IG_VERTEX_USAGE_TEXCOORD,
		IG_VERTEX_USAGE_BLENDWEIGHTS,
		IG_VERTEX_USAGE_UNUSED_0,
		IG_VERTEX_USAGE_BLENDINDICES,
		IG_VERTEX_USAGE_FOGCOORD,
		IG_VERTEX_USAGE_PSIZE,
	}

	public enum IG_VERTEX_TYPE : byte
    {
		IG_VERTEX_TYPE_FLOAT1,
		IG_VERTEX_TYPE_FLOAT2,
		IG_VERTEX_TYPE_FLOAT3,
		IG_VERTEX_TYPE_FLOAT4,
		IG_VERTEX_TYPE_UBYTE4N_COLOR,
		IG_VERTEX_TYPE_UBYTE4N_COLOR_ARGB,
		IG_VERTEX_TYPE_UBYTE4N_COLOR_RGBA,
		IG_VERTEX_TYPE_UNDEFINED_0,
		IG_VERTEX_TYPE_UBYTE2N_COLOR_5650,
		IG_VERTEX_TYPE_UBYTE2N_COLOR_5551,
		IG_VERTEX_TYPE_UBYTE2N_COLOR_4444,
		IG_VERTEX_TYPE_INT1,
		IG_VERTEX_TYPE_INT2,
		IG_VERTEX_TYPE_INT4,
		IG_VERTEX_TYPE_UINT1,
		IG_VERTEX_TYPE_UINT2,
		IG_VERTEX_TYPE_UINT4,
		IG_VERTEX_TYPE_INT1N,
		IG_VERTEX_TYPE_INT2N,
		IG_VERTEX_TYPE_INT4N,
		IG_VERTEX_TYPE_UINT1N,
		IG_VERTEX_TYPE_UINT2N,
		IG_VERTEX_TYPE_UINT4N,
		IG_VERTEX_TYPE_UBYTE4,
		IG_VERTEX_TYPE_UBYTE4_X4,
		IG_VERTEX_TYPE_BYTE4,
		IG_VERTEX_TYPE_UBYTE4N,
		IG_VERTEX_TYPE_UNDEFINED_1,
		IG_VERTEX_TYPE_BYTE4N,
		IG_VERTEX_TYPE_SHORT2,
		IG_VERTEX_TYPE_SHORT4,
		IG_VERTEX_TYPE_USHORT2,
		IG_VERTEX_TYPE_USHORT4,
		IG_VERTEX_TYPE_SHORT2N,
		IG_VERTEX_TYPE_SHORT3N,
		IG_VERTEX_TYPE_SHORT4N,
		IG_VERTEX_TYPE_USHORT2N,
		IG_VERTEX_TYPE_USHORT3N,
		IG_VERTEX_TYPE_USHORT4N,
		IG_VERTEX_TYPE_UDEC3,
		IG_VERTEX_TYPE_DEC3N,
		IG_VERTEX_TYPE_DEC3N_S11_11_10,
		IG_VERTEX_TYPE_HALF2,
		IG_VERTEX_TYPE_HALF4,
		IG_VERTEX_TYPE_UNUSED,
		IG_VERTEX_TYPE_BYTE3N,
		IG_VERTEX_TYPE_SHORT3,
		IG_VERTEX_TYPE_USHORT3,
		IG_VERTEX_TYPE_UBYTE4_ENDIAN,
		IG_VERTEX_TYPE_UBYTE4_COLOR,
		IG_VERTEX_TYPE_BYTE3,
		IG_VERTEX_TYPE_UBYTE2N_COLOR_5650_RGB,
		IG_VERTEX_TYPE_UDEC3_OES,
		IG_VERTEX_TYPE_DEC3N_OES,
		IG_VERTEX_TYPE_SHORT4N_EDGE,
		IG_VERTEX_TYPE_MAX,
	}

	public enum IG_GFX_STENCIL_FUNCTION
	{
		IG_GFX_STENCIL_FUNCTION_NEVER,
		IG_GFX_STENCIL_FUNCTION_LESS,
		IG_GFX_STENCIL_FUNCTION_EQUAL,
		IG_GFX_STENCIL_FUNCTION_LEQUAL,
		IG_GFX_STENCIL_FUNCTION_GREATER,
		IG_GFX_STENCIL_FUNCTION_NOTEQUAL,
		IG_GFX_STENCIL_FUNCTION_GEQUAL,
		IG_GFX_STENCIL_FUNCTION_ALWAYS
	};

	public enum IG_GFX_STENCIL_OPERATION
	{
		IG_GFX_STENCIL_OPERATION_KEEP,
		IG_GFX_STENCIL_OPERATION_ZERO,
		IG_GFX_STENCIL_OPERATION_REPLACE,
		IG_GFX_STENCIL_OPERATION_INCR,
		IG_GFX_STENCIL_OPERATION_INCR_WRAP,
		IG_GFX_STENCIL_OPERATION_DECR,
		IG_GFX_STENCIL_OPERATION_DECR_WRAP,
		IG_GFX_STENCIL_OPERATION_INVERT
	};
}
